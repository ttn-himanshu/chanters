import{cloneObject,forLoop,getObject,checkValuesFromKeys}from"./utils.js";import Setters from"./Setters.js";export default class Observers{constructor(e,t){this.mapper={},this.prototype=t,this.prototypeClone={},this.webComponent=e,this.cloneWebCompnent(e)}cloneWebCompnent(){let{webComponent:e,prototype:t}=this;this.prototypeClone=cloneObject(t),forLoop(t,(n=>{e[n]=t[n]}))}observe(e,t,n){t.Attribute?this.createMappings(t,"Attribute",n):t.TextContent?this.createMappings(t,"TextContent",n):t.If&&this.createMappings(t,"If",n)}createMappings(e,t,n){e[t].forEach((e=>{const{keys:t}=e;t.forEach((e=>{n&&this.removeFromMapper(e),checkValuesFromKeys(this.webComponent,e,this.mapper)&&this.defineProperty(e)}))}))}removeFromMapper(e){const{mapper:t}=this,n=getObject(t,e),o=e.split(".").pop();n[o]&&delete n[o]}defineProperty(e){const{webComponent:t}=this,n=this,o=getObject(t,e),r=e.split(".").pop(),s=cloneObject(o);try{Object.defineProperty(o,r,{get:function(){return s[r]},set:function(o){var a=n.apply(s,r,o);a&&(a.templateInstance=t.templateInstance[e],s[r]=o,n.digest(a))},enumerable:!0})}catch(e){}}observeArray(e,t){const{targetArray:n}=e,o=this;return new Proxy(n,{apply:function(e,t,n){return t[e].apply(this,n)},deleteProperty:function(e,t){return!0},set:function(n,r,s,a){return n[r]=s,"length"===r&&(t(e,!0),o.webComponent.templateInstance[e.raw+".length"]&&o.digest({arrayLengthObserver:!0,newValue:s,name:e.raw+".length",templateInstance:o.webComponent.templateInstance[e.raw+".length"]})),!0}})}digest(e){e.templateInstance?e.templateInstance.forEach((t=>{const{node:n,bindingObject:o}=t;o.Attribute?this.ObserveChanges(e,o.Attribute,n,"Attribute"):o.TextContent?this.ObserveChanges(e,o.TextContent,n,"TextContent"):o.If&&this.ObserveChanges(e,o.If,n,"If")})):console.error("unable to process digest for the change object",e)}apply(e,t,n){var o=n,r=e[t];if(r!==o)return{name:t,newValue:o,oldValue:r,type:"updated"}}updateValues(e,t){e.forEach((function(e){var n=t.name;e.keys.forEach((function(o,r){(o=t.arrayLengthObserver?o:o.split(".").pop())===n&&(e.values[r]=t.newValue)}))}))}ObserveChanges(e,t,n,o){const{webComponent:r,prototypeClone:s}=this;this.updateValues(t,e),"INPUT"===n.nodeName&&"checkbox"!==n.type&&(n.value=e.newValue),new Setters(n,{[o]:t},r,s,null,!0)}}