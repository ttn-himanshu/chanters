import{forLoop,keys}from"./utils.js";import Getters from"./Getters.js";import Setters from"./Setters.js";import Observers from"./Observers.js";export default class WebComponent{constructor(t,e){this.customElement=t,this.proto=e,this.initializeComponent(),this.beginWork()}beginWork=()=>{const{customElement:t,proto:e}=this;var o=new Observers(t,e);t.templateInstance=new Object,walkNodes(t.shadowRoot,(s=>{const r=new Getters(s,t,e);s.setAttribute&&s.setAttribute("processed","yes"),keys(r).length&&(new Setters(s,r,t,e,o),o.observe(s,r))}))};ifParentIsAReapeater=(t,e)=>!!t.contains(e);initializeComponent=()=>{const{customElement:t,proto:e}=this;t.$={},keys(t.dataset).length&&(t.props={},forLoop(t.dataset,((e,o)=>{t.props[e]=this.getProps(t,o)})))};getProps=(t,e)=>{const o=t.getRootNode().host;return o&&o[e]?"function"==typeof o[e]?o[e].bind(o):void o[e]:e}}export const walkNodes=(t,e)=>{if(t.childNodes.length>0){let o=t.firstChild;for(;o;)e&&"function"==typeof e&&e(o),walkNodes(o,e),o=o.nextSibling}};